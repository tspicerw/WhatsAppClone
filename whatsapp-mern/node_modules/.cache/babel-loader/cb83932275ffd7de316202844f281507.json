{"ast":null,"code":"var request = require('request');\n\nvar errors = require('./errors');\n\nvar util = require('./util');\n\nvar pusherLibraryVersion = require('./version');\n\nvar RESERVED_QUERY_KEYS = {\n  auth_key: true,\n  auth_timestamp: true,\n  auth_version: true,\n  auth_signature: true,\n  body_md5: true\n};\n\nfunction send(config, options, callback) {\n  var handler = config.keepAlive ? request.forever() : request;\n  var path = config.prefixPath(options.path);\n  var body = options.body ? JSON.stringify(options.body) : undefined;\n  var queryString = createSignedQueryString(config.token, {\n    method: options.method,\n    path: path,\n    params: options.params,\n    body: body\n  });\n  var url = config.getBaseURL() + path + \"?\" + queryString;\n  var params = {\n    url: url,\n    proxy: config.proxy,\n    timeout: config.timeout,\n    headers: {\n      'x-pusher-library': 'pusher-http-node ' + pusherLibraryVersion\n    }\n  };\n\n  if (body) {\n    params.headers['content-type'] = 'application/json';\n    params.body = body;\n  }\n\n  handler[options.method.toLowerCase()](params, function (err, res, resBody) {\n    dispatchRequestResult(err, url, this.req, res, callback);\n  });\n}\n\nfunction createSignedQueryString(token, request) {\n  var timestamp = Date.now() / 1000 | 0;\n  var params = {\n    auth_key: token.key,\n    auth_timestamp: timestamp,\n    auth_version: '1.0'\n  };\n\n  if (request.body) {\n    params.body_md5 = util.getMD5(request.body);\n  }\n\n  if (request.params) {\n    for (var key in request.params) {\n      if (RESERVED_QUERY_KEYS[key] !== undefined) {\n        throw Error(key + ' is a required parameter and cannot be overidden');\n      }\n\n      params[key] = request.params[key];\n    }\n  }\n\n  var method = request.method.toUpperCase();\n  var sortedKeyVal = util.toOrderedArray(params);\n  var queryString = sortedKeyVal.join('&');\n  var signData = [method, request.path, queryString].join('\\n');\n  queryString += '&auth_signature=' + token.sign(signData);\n  return queryString;\n}\n\nfunction dispatchRequestResult(err, url, req, res, callback) {\n  if (typeof callback !== \"function\") {\n    return;\n  }\n\n  var error = null;\n\n  if (err) {\n    error = new errors.RequestError(\"Request failed with an error\", url, err, res ? res.statusCode : null, res ? res.body : null);\n  } else if (res.statusCode >= 400) {\n    error = new errors.RequestError(\"Unexpected status code \" + res.statusCode, url, err, res ? res.statusCode : null, res ? res.body : null);\n  }\n\n  callback(error, req, res);\n}\n\nexports.send = send;\nexports.createSignedQueryString = createSignedQueryString;","map":{"version":3,"sources":["C:/Users/Terre/Projects/WhatsApp/whatsapp-mern/node_modules/pusher/lib/requests.js"],"names":["request","require","errors","util","pusherLibraryVersion","RESERVED_QUERY_KEYS","auth_key","auth_timestamp","auth_version","auth_signature","body_md5","send","config","options","callback","handler","keepAlive","forever","path","prefixPath","body","JSON","stringify","undefined","queryString","createSignedQueryString","token","method","params","url","getBaseURL","proxy","timeout","headers","toLowerCase","err","res","resBody","dispatchRequestResult","req","timestamp","Date","now","key","getMD5","Error","toUpperCase","sortedKeyVal","toOrderedArray","join","signData","sign","error","RequestError","statusCode","exports"],"mappings":"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","sourcesContent":["var request = require('request');\n\nvar errors = require('./errors');\nvar util = require('./util');\n\nvar pusherLibraryVersion = require('./version');\n\nvar RESERVED_QUERY_KEYS = {\n  auth_key: true,\n  auth_timestamp: true,\n  auth_version: true,\n  auth_signature: true,\n  body_md5: true\n};\n\nfunction send(config, options, callback) {\n  var handler = config.keepAlive ? request.forever() : request;\n\n  var path = config.prefixPath(options.path);\n  var body = options.body ? JSON.stringify(options.body) : undefined;\n\n  var queryString = createSignedQueryString(config.token, {\n    method: options.method,\n    path: path,\n    params: options.params,\n    body: body\n  });\n\n  var url = config.getBaseURL() + path + \"?\" + queryString;\n\n  var params = {\n    url: url,\n    proxy: config.proxy,\n    timeout: config.timeout,\n    headers: {\n      'x-pusher-library': 'pusher-http-node ' + pusherLibraryVersion\n    }\n  };\n\n  if(body) {\n    params.headers['content-type'] = 'application/json';\n    params.body = body;\n  }\n\n  handler[options.method.toLowerCase()](params, function(err, res, resBody) {\n    dispatchRequestResult(err, url, this.req, res, callback);\n  });\n}\n\nfunction createSignedQueryString(token, request) {\n  var timestamp = Date.now() / 1000 | 0;\n\n  var params = {\n    auth_key: token.key,\n    auth_timestamp: timestamp,\n    auth_version: '1.0'\n  };\n\n  if (request.body) {\n    params.body_md5 = util.getMD5(request.body);\n  }\n\n  if (request.params) {\n    for (var key in request.params) {\n      if (RESERVED_QUERY_KEYS[key] !== undefined) {\n        throw Error(key + ' is a required parameter and cannot be overidden');\n      }\n      params[key] = request.params[key];\n    }\n  }\n\n  var method = request.method.toUpperCase();\n  var sortedKeyVal = util.toOrderedArray(params);\n  var queryString = sortedKeyVal.join('&');\n\n  var signData = [method, request.path, queryString].join('\\n');\n  queryString += '&auth_signature=' + token.sign(signData);\n\n  return queryString;\n}\n\nfunction dispatchRequestResult(err, url, req, res, callback) {\n  if (typeof callback !== \"function\") {\n    return;\n  }\n\n  var error = null;\n  if (err) {\n    error = new errors.RequestError(\n      \"Request failed with an error\",\n      url,\n      err,\n      res ? res.statusCode : null,\n      res ? res.body : null\n    );\n  } else if (res.statusCode >= 400) {\n    error = new errors.RequestError(\n      \"Unexpected status code \" + res.statusCode,\n      url,\n      err,\n      res ? res.statusCode : null,\n      res ? res.body : null\n    );\n  }\n  callback(error, req, res);\n}\n\nexports.send = send;\nexports.createSignedQueryString = createSignedQueryString;\n"]},"metadata":{},"sourceType":"script"}
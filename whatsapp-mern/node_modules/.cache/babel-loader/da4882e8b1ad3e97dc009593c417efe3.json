{"ast":null,"code":"var util = require('./util');\n\nfunction getSocketSignature(pusher, token, channel, socketID, data) {\n  var result = {};\n  var signatureData = [socketID, channel];\n\n  if (data) {\n    var serializedData = JSON.stringify(data);\n    signatureData.push(serializedData);\n    result.channel_data = serializedData;\n  }\n\n  result.auth = token.key + ':' + token.sign(signatureData.join(\":\"));\n\n  if (util.isEncryptedChannel(channel)) {\n    if (pusher.config.encryptionMasterKey === undefined) {\n      throw new Error(\"Cannot generate shared_secret because encryptionMasterKey is not set\");\n    }\n\n    result.shared_secret = Buffer(pusher.channelSharedSecret(channel)).toString('base64');\n  }\n\n  return result;\n}\n\nexports.getSocketSignature = getSocketSignature;","map":{"version":3,"sources":["C:/Users/Terre/Projects/WhatsApp/whatsapp-mern/node_modules/pusher/lib/auth.js"],"names":["util","require","getSocketSignature","pusher","token","channel","socketID","data","result","signatureData","serializedData","JSON","stringify","push","channel_data","auth","key","sign","join","isEncryptedChannel","config","encryptionMasterKey","undefined","Error","shared_secret","Buffer","channelSharedSecret","toString","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AAEA,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,KAApC,EAA2CC,OAA3C,EAAoDC,QAApD,EAA8DC,IAA9D,EAAoE;AAClE,MAAIC,MAAM,GAAG,EAAb;AAEA,MAAIC,aAAa,GAAG,CAACH,QAAD,EAAWD,OAAX,CAApB;;AACA,MAAIE,IAAJ,EAAU;AACR,QAAIG,cAAc,GAAGC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArB;AACAE,IAAAA,aAAa,CAACI,IAAd,CAAmBH,cAAnB;AACAF,IAAAA,MAAM,CAACM,YAAP,GAAsBJ,cAAtB;AACD;;AAEDF,EAAAA,MAAM,CAACO,IAAP,GAAcX,KAAK,CAACY,GAAN,GAAY,GAAZ,GAAkBZ,KAAK,CAACa,IAAN,CAAWR,aAAa,CAACS,IAAd,CAAmB,GAAnB,CAAX,CAAhC;;AAEA,MAAIlB,IAAI,CAACmB,kBAAL,CAAwBd,OAAxB,CAAJ,EAAsC;AACpC,QAAIF,MAAM,CAACiB,MAAP,CAAcC,mBAAd,KAAsCC,SAA1C,EAAqD;AACnD,YAAM,IAAIC,KAAJ,CAAU,sEAAV,CAAN;AACD;;AACDf,IAAAA,MAAM,CAACgB,aAAP,GAAuBC,MAAM,CAACtB,MAAM,CAACuB,mBAAP,CAA2BrB,OAA3B,CAAD,CAAN,CAA4CsB,QAA5C,CAAqD,QAArD,CAAvB;AACD;;AAED,SAAOnB,MAAP;AACD;;AAEDoB,OAAO,CAAC1B,kBAAR,GAA6BA,kBAA7B","sourcesContent":["var util = require('./util');\n\nfunction getSocketSignature(pusher, token, channel, socketID, data) {\n  var result = {};\n\n  var signatureData = [socketID, channel];\n  if (data) {\n    var serializedData = JSON.stringify(data);\n    signatureData.push(serializedData);\n    result.channel_data = serializedData;\n  }\n\n  result.auth = token.key + ':' + token.sign(signatureData.join(\":\"));\n\n  if (util.isEncryptedChannel(channel)) {\n    if (pusher.config.encryptionMasterKey === undefined) {\n      throw new Error(\"Cannot generate shared_secret because encryptionMasterKey is not set\");\n    }\n    result.shared_secret = Buffer(pusher.channelSharedSecret(channel)).toString('base64');\n  }\n\n  return result;\n}\n\nexports.getSocketSignature = getSocketSignature;\n"]},"metadata":{},"sourceType":"script"}
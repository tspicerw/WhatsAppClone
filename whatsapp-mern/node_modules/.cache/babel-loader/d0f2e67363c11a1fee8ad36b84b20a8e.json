{"ast":null,"code":"var crypto = require('crypto');\n\nfunction toOrderedArray(map) {\n  return Object.keys(map).map(function (key) {\n    return [key, map[key]];\n  }).sort(function (a, b) {\n    if (a[0] < b[0]) {\n      return -1;\n    }\n\n    if (a[0] > b[0]) {\n      return 1;\n    }\n\n    return 0;\n  }).map(function (pair) {\n    return pair[0] + \"=\" + pair[1];\n  });\n}\n\nfunction mergeObjects(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var object = arguments[i];\n\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        target[key] = object[key];\n      }\n    }\n  }\n\n  return target;\n}\n\nfunction getMD5(body) {\n  return crypto.createHash('md5').update(body, 'utf8').digest('hex');\n}\n\nfunction secureCompare(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var result = 0;\n\n  for (var i in a) {\n    result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n  }\n\n  return result === 0;\n}\n\nfunction isEncryptedChannel(channel) {\n  return channel.startsWith(\"private-encrypted-\");\n}\n\nexports.toOrderedArray = toOrderedArray;\nexports.mergeObjects = mergeObjects;\nexports.getMD5 = getMD5;\nexports.secureCompare = secureCompare;\nexports.isEncryptedChannel = isEncryptedChannel;","map":{"version":3,"sources":["C:/Users/Terre/Projects/WhatsApp/whatsapp-mern/node_modules/pusher/lib/util.js"],"names":["crypto","require","toOrderedArray","map","Object","keys","key","sort","a","b","pair","mergeObjects","target","i","arguments","length","object","hasOwnProperty","getMD5","body","createHash","update","digest","secureCompare","result","charCodeAt","isEncryptedChannel","channel","startsWith","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,SAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBA,GAAjB,CAAqB,UAASG,GAAT,EAAc;AACxC,WAAO,CAACA,GAAD,EAAMH,GAAG,CAACG,GAAD,CAAT,CAAP;AACD,GAFM,EAEJC,IAFI,CAEC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACrB,QAAID,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAZ,EAAiB;AACf,aAAO,CAAC,CAAR;AACD;;AACD,QAAID,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAZ,EAAiB;AACf,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD,GAVM,EAUJN,GAVI,CAUA,UAASO,IAAT,EAAe;AACpB,WAAOA,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAV,GAAgBA,IAAI,CAAC,CAAD,CAA3B;AACD,GAZM,CAAP;AAaD;;AAED,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AACA,SAAK,IAAIP,GAAT,IAAgBU,MAAhB,EAAwB;AACtB,UAAIA,MAAM,CAACC,cAAP,CAAsBX,GAAtB,CAAJ,EAAgC;AAC9BM,QAAAA,MAAM,CAACN,GAAD,CAAN,GAAcU,MAAM,CAACV,GAAD,CAApB;AACD;AACF;AACF;;AAED,SAAOM,MAAP;AACD;;AAED,SAASM,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,SAAOnB,MAAM,CAACoB,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgCF,IAAhC,EAAsC,MAAtC,EAA8CG,MAA9C,CAAqD,KAArD,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBf,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,MAAID,CAAC,CAACO,MAAF,KAAaN,CAAC,CAACM,MAAnB,EAA2B;AACzB,WAAO,KAAP;AACD;;AACD,MAAIS,MAAM,GAAG,CAAb;;AACA,OAAK,IAAIX,CAAT,IAAcL,CAAd,EAAiB;AACfgB,IAAAA,MAAM,IAAKhB,CAAC,CAACiB,UAAF,CAAaZ,CAAb,IAAkBJ,CAAC,CAACgB,UAAF,CAAaZ,CAAb,CAA7B;AACD;;AACD,SAAOW,MAAM,KAAK,CAAlB;AACD;;AAED,SAASE,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,SAAOA,OAAO,CAACC,UAAR,CAAmB,oBAAnB,CAAP;AACD;;AAEDC,OAAO,CAAC3B,cAAR,GAAyBA,cAAzB;AACA2B,OAAO,CAAClB,YAAR,GAAuBA,YAAvB;AACAkB,OAAO,CAACX,MAAR,GAAiBA,MAAjB;AACAW,OAAO,CAACN,aAAR,GAAwBA,aAAxB;AACAM,OAAO,CAACH,kBAAR,GAA6BA,kBAA7B","sourcesContent":["var crypto = require('crypto');\n\nfunction toOrderedArray(map) {\n  return Object.keys(map).map(function(key) {\n    return [key, map[key]];\n  }).sort(function(a, b) {\n    if (a[0] < b[0]) {\n      return -1;\n    }\n    if (a[0] > b[0]) {\n      return 1;\n    }\n    return 0;\n  }).map(function(pair) {\n    return pair[0] + \"=\" + pair[1];\n  });\n}\n\nfunction mergeObjects(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var object = arguments[i];\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        target[key] = object[key];\n      }\n    }\n  }\n\n  return target;\n}\n\nfunction getMD5(body) {\n  return crypto.createHash('md5').update(body, 'utf8').digest('hex');\n}\n\nfunction secureCompare(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  var result = 0;\n  for (var i in a) {\n    result |= (a.charCodeAt(i) ^ b.charCodeAt(i));\n  }\n  return result === 0;\n}\n\nfunction isEncryptedChannel(channel) {\n  return channel.startsWith(\"private-encrypted-\");\n}\n\nexports.toOrderedArray = toOrderedArray;\nexports.mergeObjects = mergeObjects;\nexports.getMD5 = getMD5;\nexports.secureCompare = secureCompare;\nexports.isEncryptedChannel = isEncryptedChannel;"]},"metadata":{},"sourceType":"script"}